$break-xxs: 480px;
$break-xs: 767px;
$break-sm: 991px;
$break-md: 1200px;
$break-lg: 1400px;

@mixin print() {
	@media only print { @content; }
}

@mixin respond($media) {
	@if $media == xxs {
		@media only screen and (max-width: $break-xxs) { @content; }
	}
	@else if $media == xs {
		@media only screen and (min-width: $break-xxs + 1) and (max-width: $break-xs) { @content; }
	}
	@else if $media == sm {
		@media only screen and (min-width: $break-xs + 1) and (max-width: $break-sm) { @content; }
	}
	@else if $media == md {
		@media only screen and (min-width: $break-sm + 1) and (max-width: $break-md) { @content; }
	}
	@else if $media == lg {
		@media only screen and (min-width: $break-md + 1) { @content; }
	}
	@else if $media == xlg {
		@media only screen and (min-width: $break-lg + 1) { @content; }
	}
	@else if $media == under-xs {
		@media only screen and (max-width: $break-xs) { @content; }
	}
	@else if $media == under-sm {
		@media only screen and (max-width: $break-sm) { @content; }
	}
	@else if $media == under-md {
		@media only screen and (max-width: $break-md) { @content; }
	}
	@else if $media == over-xs {
		@media only screen and (min-width: $break-xxs + 1) { @content; }
	}
	@else if $media == over-sm {
		@media only screen and (min-width: $break-xs + 1) { @content; }
	}
	@else if $media == over-md {
		@media only screen and (min-width: $break-sm + 1) { @content; }
	}
	@else if $media == over-lg {
		@media only screen and (min-width: $break-md + 1) { @content; }
	}
}

body {
	font-family: notoSans_ko_thin;
	background-color: rgba(200, 200, 200, 0.1);
}

#bk-wrapper {
	

	#bk-head {
		margin-top: 10%;
		// margin-left: 15px;
		// margin-right: 15px;
		background-color: #fff;
		@include respond(over-sm) {
			// margin: 10% 0 0 0;
			background-color: transparent;
		}
		#bk-card {
			width: 80%;
			font-size: 1em;
			background-color: #fff;
			padding: 20px;
			margin: 0 auto;
			border: none;
			.info-bk {
				> p:first-child {
					font-size: 2.7em;
				}
			}
			.info-contact {
				margin-top: -10%;
				text-align: right;
			}
			@include respond(over-sm) {
				width: 35%;
				border-radius: 5px;
				border: 1px solid rgba(0, 0, 0, 0.1);
				// border: none;

				.info-contact {
					margin-top: 40%!important;
				}
			}
		}
	}
	#about-bk {
		margin-top: 50px;
		text-align: center;
		padding: 20px;
		.about-contents {
			// border-right: 1px solid #eee;
			padding: 20px 0;
			&:after {
				content: "";
				// width: 1px;
				// height: 40%;
				// background-color: #eee;
				// position: absolute;
				// display: block;
				// top: 30%;
				// right: 0;
			}
			min-height: 100px;
			> div.head-desc {
				font-weight: bold;
				font-size: 1.3em;
				padding: 10px;
			}
		}
		.about-contents:not(:last-child) {
			// border: none;
		}
	}

	#bk-say {
		background-color: #fff;
		margin-top: 20px;
		padding: 50px;
		line-height: 1em;
		font-size: 1.2em;
	}
	#bk-contents {
		section#bk-who-am-i {
			background-color: #1B2B34;
			// height: 130vh;
			/* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#F9F9F9+13,1b2b34+50 */
			// background: #F9F9F9; /* Old browsers */
			// background: -moz-linear-gradient(top, #F9F9F9 0%, #1b2b34 50%); /* FF3.6-15 */
			// background: -webkit-linear-gradient(top, #F9F9F9 0%,#1b2b34 50%); /* Chrome10-25,Safari5.1-6 */
			// background: linear-gradient(to bottom, #F9F9F9 0%,#1b2b34 50%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
			// filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#F9F9F9', endColorstr='#1b2b34',GradientType=0 ); /* IE6-9 */
			#bk-typed {
				color: #c5c5c5;
				font-size: 2em;
				position: relative;
				width: 70%;
				margin: 0 auto;
				min-height: 100px;
				white-space: pre;
				padding: 100px 50px 50px 50px;
			}
		}
		.bk-container {
			width: 80%;
			margin: 0 auto;
		}
	}

	.type-reserved-word {
		color: #c594c5;
	}
	.type-variable {
		color: #fff;
	}
	.type-c {
		
	}

}

@font-face {
	font-family: 'notoSans_ko_thin';
	src: url('./public/fonts/notoSans_ko_thin.woff') format('woff');
}

